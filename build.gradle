buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.7.10-0.0.1"
group= "se.jereq.testmod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "testmod"

minecraft {
    version = "1.7.10-10.13.4.1448-1.7.10"
    runDir = "debug"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    //mappings = "stable_12"
}

repositories {
    maven {
        name 'chickenbones'
        url "http://chickenbones.net/maven/"
    }
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    ivy {
        name "CoFHCore"
        artifactPattern "http://addons-origin.cursecdn.com/files/2246/920/[module]-[revision].[ext]"
    }
    ivy {
        name "ThermalFoundation"
        artifactPattern "http://addons-origin.cursecdn.com/files/2246/923/[module]-[revision].[ext]"
    }
    ivy {
        name "ThermalExpansion"
        artifactPattern "http://addons-origin.cursecdn.com/files/2246/932/[module]-[revision].[ext]"
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    // http://files.minecraftforge.net/CodeChickenLib/
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"

    compile "mcp.mobius.waila:Waila:1.5.11-RC2-NONEI_1.7.10"

    // http://chickenbones.net/maven
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.46:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.111:dev"

    compile group: 'cofh', name: 'CoFHCore', version: '[1.7.10]3.0.3-303-dev', ext: 'jar'
    compile group: 'cofh', name: 'ThermalFoundation', version: '[1.7.10]1.2.0-102-dev', ext: 'jar'
    compile group: 'cofh', name: 'ThermalExpansion', version: '[1.7.10]4.0.3B1-218-dev', ext: 'jar'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea.module.inheritOutputDirs = true
